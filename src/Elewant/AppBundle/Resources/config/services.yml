services:

    # Elewant - Frontend

    elewant.security.user_provider:
        class: Elewant\AppBundle\Security\UserProvider
        arguments: [ "@doctrine" ]

    elewant.security.registration.form:
        class: Elewant\AppBundle\Form\UserType
        factory: "form.factory:create"
        arguments: [ Elewant\AppBundle\Form\UserType ]

    elewant.security.registration.form_handler:
        class: Elewant\AppBundle\Form\RegistrationFormHandler
        arguments: [ "@elewant.security.user_provider" ]

    elewant.security.account.connector:
        alias: elewant.security.user_provider

    # Elewant - Herding

    elewant.herd.herd_repository:
        class: Elewant\AppBundle\Repository\HerdRepository
        factory: [ "@doctrine.orm.entity_manager", getRepository ]
        arguments: [ Elewant\AppBundle\Entity\Herd ]

    elewant.api_command_controller:
        class: Elewant\AppBundle\Controller\ApiCommandController
        arguments: ['@prooph_service_bus.herding_command_bus', '@prooph_service_bus.message_factory']

    elewant.form_herd_handler:
        class: Elewant\Herding\Model\Handlers\FormHerdHandler
        arguments: ['@herd_collection']

    elewant.adopt_elephpant_handler:
        class: Elewant\Herding\Model\Handlers\AdoptElePHPantHandler
        arguments: ['@herd_collection']

    elewant.abandon_elephpant_handler:
        class: Elewant\Herding\Model\Handlers\AbandonElePHPantHandler
        arguments: ['@herd_collection']

    elewant.abandon_herd_handler:
        class: Elewant\Herding\Model\Handlers\AbandonHerdHandler
        arguments: ['@herd_collection']
