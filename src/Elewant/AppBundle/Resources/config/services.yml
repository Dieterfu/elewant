imports:
    - { resource: "@ElewantAppBundle/Resources/config/event_store.yml" }
    - { resource: "@ElewantAppBundle/Resources/config/projection.yml" }
    - { resource: "@ElewantAppBundle/Resources/config/service_bus.yml" }

services:

    elewant.herd.herd_repository:
        class: Elewant\AppBundle\Repository\HerdRepository
        factory: [ "@doctrine.orm.entity_manager", getRepository ]
        arguments: [ Elewant\AppBundle\Entity\Herd ]

    elewant.event_subscriber.new_user:
        class: Elewant\AppBundle\EventSubscriber\NewUserSubscriber
        arguments: ["@elewant.herd.herd_repository", "@prooph_service_bus.herding_command_bus"]
        tags:
            - { name: kernel.event_subscriber }

    elewant.api_command_controller:
        class: Elewant\AppBundle\Controller\ApiCommandController
        arguments: ['@prooph_service_bus.herding_command_bus', '@prooph_service_bus.message_factory']

    elewant.form_herd_handler:
        class: Elewant\Herding\Model\Handlers\FormHerdHandler
        arguments: ['@herd_collection']

    elewant.adopt_elephpant_handler:
        class: Elewant\Herding\Model\Handlers\AdoptElePHPantHandler
        arguments: ['@herd_collection']

    elewant.abandon_elephpant_handler:
        class: Elewant\Herding\Model\Handlers\AbandonElePHPantHandler
        arguments: ['@herd_collection']

    elewant.abandon_herd_handler:
        class: Elewant\Herding\Model\Handlers\AbandonHerdHandler
        arguments: ['@herd_collection']
