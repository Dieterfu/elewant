services:
    # HWI OAuth

    hwi_oauth.account.connector:
        class: Elewant\FrontendBundle\Security\UserProvider
        arguments: [ "@elewant.user.user_repository" ]

    hwi_oauth.registration.form:
        class: Elewant\FrontendBundle\Form\UserType
        factory: "form.factory:create"
        arguments: [ Elewant\FrontendBundle\Form\UserType ]

    hwi_oauth.registration.form.handler:
        class: Elewant\FrontendBundle\Form\RegistrationFormHandler

    # Elewant

    elewant.user.user_provider:
        class: Elewant\FrontendBundle\Security\UserProvider
        arguments: [ "@elewant.user.user_repository" ]

    elewant.user.user_repository:
        class: Elewant\FrontendBundle\Repository\UserRepository
        factory: [ "@doctrine.orm.entity_manager", getRepository ]
        arguments: [ Elewant\FrontendBundle\Entity\User ]

#  elewant.api_command_controller:
#    class: Elewant\FrontendBundle\Controller\ApiCommandController
#    arguments: ['@elewant_service_bus.elewant_command_bus', '@elewant_service_bus.message_factory']

    elewant.form_herd_handler:
        class: Elewant\Herding\Model\Handlers\FormHerdHandler
        arguments: ['@herd_collection']
    elewant.adopt_elephpant_handler:
        class: Elewant\Herding\Model\Handlers\AdoptElePHPantHandler
        arguments: ['@herd_collection']
    elewant.abandon_elephpant_handler:
        class: Elewant\Herding\Model\Handlers\AbandonElePHPantHandler
        arguments: ['@herd_collection']
